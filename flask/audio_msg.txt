Feature extraction for audio data using the librosa library in Python. It loads an audio file, computes the Mel-frequency cepstral coefficients (MFCCs) of the audio waveform, and then calculates the mean of each MFCC feature over time to generate a single feature vector that represents the entire audio clip.
The reshape() function works by rearranging the elements of the input array into a new shape specified by the provided arguments. Arranging a 1D numpy array into a 4D numpy array with dimensions (1, 5, 5, 1).
Loading a Convolutional Neural Network (CNN) model involves restoring the saved weights and architecture of a trained model for prediction.
The steps involved include preprocessing the audio by converting it to mfcc and resizing it to the input size expected by the CNN model, loading the saved weights and architecture of the trained CNN model, passing the preprocessed image through the CNN model using the predict() method to obtain the class probabilities, and interpreting the prediction by identifying the class with the highest probability as the predicted class.